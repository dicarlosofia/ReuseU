name: Frontend CI

on:
  push:
    paths:
      - 'frontend/**'
  pull_request:
    paths:
      - 'frontend/**'
  workflow_dispatch:
    inputs:
      test-browser:
        description: 'Browser to test with (chrome, firefox, edge, electron)'
        required: false
        default: 'chrome'
      test-spec:
        description: 'Specific test file to run (e.g., "e2e/login.cy.js")'
        required: false
        default: ''
      skip-build:
        description: 'Skip production build step'
        required: false
        default: 'false'

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Verify Cypress
        run: npx cypress verify

      - name: Start server and run tests
        run: |
          # server in background
          npm run dev &
          SERVER_PID=$!
          
          # server timeout
          echo "Waiting for server to start..."
          for i in {1..10}; do
            if curl -s http://localhost:3000 >/dev/null; then
              echo "Server is up after $((i*3)) seconds"
              break
            fi
            if [ $i -eq 10 ]; then
              echo "Server failed to start within 30 seconds"
              kill $SERVER_PID
              exit 1
            fi
            sleep 3
          done
          
          # test command
          TEST_CMD="npx cypress run --browser ${{ github.event.inputs.test-browser || 'chrome' }}"
          if [ -n "${{ github.event.inputs.test-spec }}" ]; then
            TEST_CMD="$TEST_CMD --spec ${{ github.event.inputs.test-spec }}"
          fi
          
          # Run tests
          echo "Executing: $TEST_CMD"
          $TEST_CMD || TEST_RESULT=$?
          
          # Cleanup
          kill $SERVER_PID
          exit ${TEST_RESULT:-0}
        env:
          PORT: 3000
          NODE_ENV: test

      - name: Build production bundle
        if: ${{ !github.event.inputs.skip-build || github.event.inputs.skip-build == 'false' }}
        run: npm run build

      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-artifacts-${{ github.run_id }}
          path: |
            cypress/screenshots
            cypress/videos
            cypress/logs
          retention-days: 3